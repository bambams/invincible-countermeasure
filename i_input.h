
#ifndef H_I_INPUT
#define H_I_INPUT

void run_input(void);


void initialise_control(void);



/*
enum
{
KEY_0,
KEY_1,
KEY_2,
KEY_3,
KEY_4,
KEY_5,
KEY_6,
KEY_7,
KEY_8,
KEY_9,

KEY_A,
KEY_B,
KEY_C,
KEY_D,
KEY_E,
KEY_F,
KEY_G,
KEY_H,
KEY_I,
KEY_J,
KEY_K,
KEY_L,
KEY_M,
KEY_N,
KEY_O,
KEY_P,
KEY_Q,
KEY_R,
KEY_S,
KEY_T,
KEY_U,
KEY_V,
KEY_W,
KEY_X,
KEY_Y,
KEY_Z,

KEY_MINUS,
KEY_EQUALS,
KEY_SBRACKET_OPEN,
KEY_SBRACKET_CLOSE,
KEY_BACKSLASH,
KEY_SEMICOLON,
KEY_APOSTROPHE,
KEY_COMMA,
KEY_PERIOD,
KEY_SLASH,

KEY_LSHIFT,
KEY_RSHIFT,
KEY_LCTRL,
KEY_RCTRL,

KEY_UP,
KEY_DOWN,
KEY_LEFT,
KEY_RIGHT,

KEY_ENTER,
KEY_BACKSPACE,
KEY_INSERT,
KEY_HOME,
KEY_PAGEUP,
KEY_PAGEDOWN,
KEY_DELETE,
KEY_END,
KEY_TAB,
// KEY_ESCAPE, should probably intercept this

KEY_PAD_0,
KEY_PAD_1,
KEY_PAD_2,
KEY_PAD_3,
KEY_PAD_4,
KEY_PAD_5,
KEY_PAD_6,
KEY_PAD_7,
KEY_PAD_8,
KEY_PAD_9,
KEY_PAD_MINUS,
KEY_PAD_PLUS,
KEY_PAD_ENTER,
KEY_PAD_DELETE,

KEYS

};
*/




#endif
